apiVersion: apps/v1
kind: Deployment
metadata:
  name: MODULE_NAME_VALUE-ds
  namespace: K8S_NAMESPACE_VALUE
  labels:
    component: MODULE_NAME_VALUE
    role: demo-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      component: MODULE_NAME_VALUE
      role: demo-svc
  template:
    metadata:
      labels:
        component: MODULE_NAME_VALUE
        role: demo-svc
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - MODULE_NAME_VALUE
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: MODULE_NAME_VALUE
        imagePullPolicy: Always
        # imagePullSecrets:
        #   - name: myCustomSecret
        image: SVC_IMG_NAME_VALUE
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DEPLOY_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RELEASE_VERSION
          value: RELEASE_VERSION_VALUE
        - name: MODULE_NAME
          value: MODULE_NAME_VALUE
        resources:
          requests:
            memory: "100Mi"
            cpu: "50m"
          limits:
            memory: "500Mi"
            cpu: "200m"
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
        livenessProbe:
          httpGet:
            path: /
            port: 80
      restartPolicy: Always
status: {}
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: MODULE_NAME_VALUE-service
#   namespace: K8S_NAMESPACE_VALUE
#   labels:
#     component: MODULE_NAME_VALUE
#     role: demo-svc
# spec:
#   ports:
#   - name: http
#     nodePort: 30004
#     port: 80
#     targetPort: 80
#     protocol: TCP
#   type: NodePort
#   selector:
#     component: MODULE_NAME_VALUE
---
apiVersion: v1
kind: Service
metadata:
  name: MODULE_NAME_VALUE-service
  namespace: K8S_NAMESPACE_VALUE
  labels:
    component: MODULE_NAME_VALUE
    role: demo-svc
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
  selector:
    component: MODULE_NAME_VALUE
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: MODULE_NAME_VALUE-ing
  namespace: K8S_NAMESPACE_VALUE
  labels:
    component: MODULE_NAME_VALUE
    role: demo-ing
spec:
  ingressClassName: nginx
  rules:
  - host: K8S_NAMESPACE_VALUE.growfast.co.in
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: MODULE_NAME_VALUE-service
            port:
              number: 80